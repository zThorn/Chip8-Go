package cpu

type C8CPU struct {
	fonts          Fonts
	register       Register
	memory         Memory
	programCounter int
}

type font struct {
	hexcodes    []byte
	description string
}

type Fonts struct {
	fonts []font
}

//V0 -- VF (VF is also a carry flag)
type Register struct {
	//Locations
	vx byte
	vy byte

	//Data
	data byte
}

type Registers struct {
	//Chip8 has 16 available regs
	registers [16]Register
}

type Memory struct {
}

func NewCPU() *C8CPU {
	cpu := new(C8CPU)
	cpu.loadFonts()

	return cpu

}

func (cpu *C8CPU) ClearCPU() {

}

func (cpu *C8CPU) loadFonts() {
	cpu.fonts = Fonts{[]font{
		{[]byte{0xF0, 0x90, 0x90, 0x90, 0xF0}, "0"},
		{[]byte{0x20, 0x60, 0x20, 0x20, 0x70}, "1"},
		{[]byte{0xF0, 0x10, 0xF0, 0x80, 0xF0}, "2"},
		{[]byte{0xF0, 0x10, 0xF0, 0x10, 0xF0}, "3"},
		{[]byte{0x90, 0x90, 0xF0, 0x10, 0x10}, "4"},
		{[]byte{0xF0, 0x80, 0xF0, 0x10, 0xF0}, "5"},
		{[]byte{0xF0, 0x80, 0xF0, 0x90, 0xF0}, "6"},
		{[]byte{0xF0, 0x10, 0x20, 0x40, 0x40}, "7"},
		{[]byte{0xF0, 0x90, 0xF0, 0x90, 0xF0}, "8"},
		{[]byte{0xF0, 0x90, 0xF0, 0x10, 0xF0}, "9"},
		{[]byte{0xF0, 0x90, 0xF0, 0x90, 0x90}, "A"},
		{[]byte{0xE0, 0x90, 0xE0, 0x90, 0xE0}, "B"},
		{[]byte{0xF0, 0x80, 0x80, 0x80, 0xF0}, "C"},
		{[]byte{0xE0, 0x90, 0x90, 0x90, 0xE0}, "D"},
		{[]byte{0xF0, 0x80, 0xF0, 0x80, 0xF0}, "E"},
		{[]byte{0xF0, 0x80, 0xF0, 0x80, 0x80}, "F"},
	}}
}
